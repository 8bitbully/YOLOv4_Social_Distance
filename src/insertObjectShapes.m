function img = insertObjectShapes(img, zoneProp, bboxes, prop)

    arguments
        img (:, :, 3) uint8
        zoneProp Zone
        bboxes DetectorBbox
        prop.drawSafe (1, 1) logical ...
            {mustBeInRange(prop.drawSafe, 0, 1)} ...
            = false
        prop.shape (1, :) char ...
            {mustBeMember(prop.shape, {'Rectangle', 'FilledRectangle', ...
             'Circle', 'FilledCircle'})} ...
            = 'Rectangle'
        prop.showDist (1, 1) logical ...
            {mustBeInRange(prop.showDist, 0, 1)} ...
            = false
    end

    % Filtering bounding boxes from the ID of the objects in the zone.
    bboxIdx = bboxes.fromIndex(zoneProp.Ids);

    % risky people
    img = insertText(img, [0, 0], ...
        ['Risk: ', num2str(numel(zoneProp.Ids))], ...
        "BoxOpacity", 0.3, "BoxColor", "red", "FontSize", 22);

    % show detected people
    switch prop.shape
        case {'Rectangle', 'FilledRectangle'}
            img = insertShape(img, prop.shape, ...
                              bboxes.BoundingBoxes(bboxIdx, :), ...
                              "LineWidth", 2, ...
                              "Color", "red", ...
                              "Opacity", 0.2);
            img = insertShape(img, prop.shape, ...
                              bboxes.BoundingBoxes(~bboxIdx, :), ...
                              "LineWidth", 2, ...
                              "Color", "green", ...
                              "Opacity", 0.2);
        case {'Circle', 'FilledCircle'}
            % circle radius change,
            circle = bboxes.toCircle(radius= 10).circleForm;
            img = insertShape(img, prop.shape, ...
                              circle(bboxIdx, :), ...
                              "LineWidth", 2, ...
                              "Color", "red");
            img = insertShape(img, prop.shape, ...
                              circle(~bboxIdx, :), ...
                              "LineWidth", 2, ...
                              "Color", "green"); 
    end

    % returns empty if no objects is detected.
    if zoneProp.isEmpty
        return,
    end


    % draw line
    riskLine = reshape([zoneProp.Risk.LineForm], 4, [])';
    img = insertShape(img, "Line", riskLine, "LineWidth", 2, "Color", "red");
    % if safe lines are required to be drawn.
    if prop.drawSafe
        safeLine = reshape([zoneProp.Safe.LineForm], 4, [])';
        img = insertShape(img, "Line", safeLine, "LineWidth", 2, "Color", "green");
    end

    % show distance
    if prop.showDist
        if ~isempty(zoneProp.Ids) || prop.drawSafe
            img = insertText(img, [0, 50], ...
                ['Distance Threshold: ', num2str(zoneProp.Distance), 'm'], ...
                "BoxOpacity", 0.3, "BoxColor", "red", "FontSize", 22);
        end

        img = insertText(img, zoneProp.Risk.Center, [zoneProp.Risk.strDistance], ...
            'BoxOpacity', 0, 'TextColor', 'black', 'FontSize', 16);
        
        if prop.drawSafe
            img = insertText(img, zoneProp.Safe.Center, [zoneProp.Safe.strDistance], ...
                'BoxOpacity', 0, 'TextColor', 'black', 'FontSize', 16);
        end
    end

end